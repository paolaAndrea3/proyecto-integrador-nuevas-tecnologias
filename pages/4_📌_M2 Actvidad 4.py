
import streamlit as st
import pandas as pd
import numpy as np
import random
from faker import Faker

# Configuraci칩n de la p치gina
st.set_page_config(   
    page_icon="游늷",
    layout="wide"
)

st.title("Momento 2 - Actividad 4")

st.header("Descripci칩n de la actividad")
st.markdown("""
En esta actividad pr치ctica, desarrollar치s una aplicaci칩n web interactiva utilizando la librer칤a Streamlit
 y la poderosa herramienta de manipulaci칩n de datos Pandas. El enfoque principal ser치 el dominio de los 
m칠todos `.loc` e `.iloc` para realizar selecciones, filtrado y visualizaci칩n de datos dentro de un DataFrame 
que contiene informaci칩n sobre pel칤culas colombianas.A trav칠s de la creaci칩n de esta aplicaci칩n, explorar치s c칩mo `.loc` permite
la selecci칩n de datos basada en etiquetas de filas y columnas, mientras que `.iloc` facilita la selecci칩n basada en 칤ndices
 enteros. Aprender치s a implementar controles interactivos en Streamlit que permitan a los usuarios experimentar con diferentes formas de
 consultar y explorar el conjunto de datos de pel칤culas, comprendiendo as칤 la utilidad y la sintaxis de estos fundamentales m칠todos de Pandas.
""")

st.header("Objetivos de aprendizaje")

st.markdown("""
- Diferenciar y aplicar la selecci칩n de datos por etiquetas (`.loc`) y por posici칩n (`.iloc`) en Pandas.
- Utilizar `.loc` para seleccionar datos por nombre y aplicar filtros.
- Utilizar `.iloc` para seleccionar datos por 칤ndice.
- Crear una aplicaci칩n Streamlit interactiva para explorar un DataFrame de pel칤culas con `.loc` e `.iloc`.
- Mostrar los resultados de las selecciones de datos en la aplicaci칩n Streamlit.
- Integrar Pandas y Streamlit para crear una interfaz de exploraci칩n de datos.
""")
import streamlit as st
import pandas as pd

# 1. Carga de datos (DataFrame de pel칤culas colombianas)
@st.cache_data
def cargar_datos():
    data = {
        'T칤tulo': ['La estrategia del caracol', 'El abrazo de la serpiente', 'Monos', 'Ciudad de perros', 'Los colores de la monta침a',
                   'Sof칤a y el terco', 'La vendedora de rosas', 'El viaje', 'Para칤so Travel', 'Bol칤var soy yo',
                   'Los viajes del viento', 'Gente de bien', 'Matar a Jes칰s', 'Climas', 'Memorias del calavero'],
        'Director': ['Sergio Cabrera', 'Ciro Guerra', 'Alejandro Landes', 'Tito Asorey', 'Carlos C칠sar Arbel치ez',
                     'Andr칠s Burgos', 'V칤ctor Gaviria', 'Ernesto McCausland', 'Sim칩n Brand', 'Jorge Al칤 Triana',
                     'Ciro Guerra', 'Franco Lolli', 'Laura Mora Ortega', 'Enrique Urbizu', 'Rub칠n Mendoza'],
        'A침o': [1993, 2015, 2019, 2006, 2010,
                2012, 1998, 2001, 2008, 2002,
                2009, 2014, 2017, 2014, 2017],
        'G칠nero': ['Comedia dram치tica', 'Aventura, Drama', 'Drama, Thriller', 'Drama', 'Drama',
                   'Drama, Comedia', 'Drama', 'Drama', 'Comedia, Drama', 'Comedia, Drama',
                   'Drama, Musical', 'Drama', 'Drama, Crimen', 'Drama', 'Comedia, Fantas칤a'],
        'Puntuaci칩n IMDB': [8.1, 7.8, 7.5, 7.2, 7.0,
                           6.8, 8.3, 7.1, 6.5, 6.9,
                           7.9, 7.3, 7.6, 6.7, 6.6]
    }
    df = pd.DataFrame(data)
    return df

df_peliculas_original = cargar_datos()

st.title('Explorador de Pel칤culas Colombianas')
st.subheader('Una aplicaci칩n interactiva con Streamlit y Pandas')

# 2. Secci칩n para mostrar el DataFrame original
st.header('DataFrame Original de Pel칤culas')
st.dataframe(df_peliculas_original)

# 3. Secci칩n para realizar selecciones con .loc
st.header('Selecci칩n de Pel칤culas (.loc)')

# Ejemplo 1: Selecci칩n por etiqueta (T칤tulo)
st.subheader('Seleccionar por T칤tulo')
titulo_seleccionado_loc = st.selectbox('Elige un t칤tulo:', df_peliculas_original['T칤tulo'].unique())
if titulo_seleccionado_loc:
    pelicula_seleccionada = df_peliculas_original.loc[df_peliculas_original['T칤tulo'] == titulo_seleccionado_loc]
    st.write('Informaci칩n de la pel칤cula:')
    st.dataframe(pelicula_seleccionada)

# Ejemplo 2: Selecci칩n por m칰ltiples criterios (A침o y Puntuaci칩n)
st.subheader('Filtrar por A침o y Puntuaci칩n')
a침o_filtro = st.slider('Selecciona un a침o m칤nimo:', df_peliculas_original['A침o'].min(), df_peliculas_original['A침o'].max(), df_peliculas_original['A침o'].min())
puntuacion_minima = st.slider('Selecciona una puntuaci칩n m칤nima:', 0.0, 10.0, 7.0)
peliculas_filtradas_loc = df_peliculas_original.loc[(df_peliculas_original['A침o'] >= a침o_filtro) & (df_peliculas_original['Puntuaci칩n IMDB'] >= puntuacion_minima)]
st.write(f'Pel칤culas estrenadas desde {a침o_filtro} con una puntuaci칩n m칤nima de {puntuacion_minima}:')
st.dataframe(peliculas_filtradas_loc)

# 4. Secci칩n para realizar selecciones con .iloc
st.header('Selecci칩n de Pel칤culas (.iloc)')

# Ejemplo 3: Selecci칩n por rango de 칤ndices
st.subheader('Seleccionar por Rango de 칈ndices')
indices_seleccionados = st.slider('Selecciona un rango de 칤ndices:', 0, len(df_peliculas_original) - 1, (0, 2))
inicio_indice, fin_indice = indices_seleccionados
peliculas_rango_iloc = df_peliculas_original.iloc[inicio_indice:fin_indice+1]
st.write(f'Pel칤culas en el rango de 칤ndices {inicio_indice} a {fin_indice}:')
st.dataframe(peliculas_rango_iloc)

# Ejemplo 4: Selecci칩n de filas y columnas espec칤ficas por 칤ndice
st.subheader('Seleccionar Filas y Columnas Espec칤ficas')
fila_indice = st.number_input('칈ndice de fila a mostrar:', 0, len(df_peliculas_original) - 1, 0)
columnas_indices = st.multiselect('칈ndices de columnas a mostrar:', range(len(df_peliculas_original.columns)), default=[0, 1])
if columnas_indices:
    columnas_seleccionadas = df_peliculas_original.columns[list(columnas_indices)].tolist()
    pelicula_iloc_especifica = df_peliculas_original.iloc[[fila_indice], df_peliculas_original.columns.get_indexer(columnas_seleccionadas)]
    st.write(f'Informaci칩n de la pel칤cula en el 칤ndice {fila_indice} y columnas con 칤ndices {columnas_indices}:')
    st.dataframe(pelicula_iloc_especifica)

st.sidebar.header('Opciones de Exploraci칩n')
st.sidebar.markdown('Utiliza los selectores y sliders para interactuar con los datos.')